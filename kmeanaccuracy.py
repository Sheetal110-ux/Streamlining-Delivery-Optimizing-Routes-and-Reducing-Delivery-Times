# -*- coding: utf-8 -*-
"""kmeanaccuracy

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ye905f0FOLuxXaz8SZyA2tHIwOTNjofy
"""

from google.colab  import files

uploaded=files.upload()

import pandas as pd
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
import matplotlib.pyplot as plt

data = pd.read_csv('customerdata (3).csv')

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
scaled_data = scaler.fit_transform(data)

inertia_values = []
k_range = range(1, 21)  # You can adjust the range
for k in k_range:
    kmeans = KMeans(n_clusters=k, random_state=0)
    kmeans.fit(scaled_data)
    inertia_values.append(kmeans.inertia_)

plt.plot(k_range, inertia_values, marker='o')
plt.xlabel('Number of Clusters (k)')
plt.ylabel('Inertia')
plt.title('Elbow Method for Optimal k')
plt.show()

chosen_k = 3  # Replace with your chosen k value
kmeans = KMeans(n_clusters=chosen_k, random_state=0)
kmeans_labels = kmeans.fit_predict(scaled_data)

silhouette_avg = silhouette_score(scaled_data, kmeans_labels)
print(f"Silhouette Score: {silhouette_avg}")

from google.colab import drive
drive.mount('/content/drive')